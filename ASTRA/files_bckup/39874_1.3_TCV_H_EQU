!----------------------------------------------------------------------------
! TCV model for interpretative eITB simulations
! GI: modified to run switched shot, then sawteeth
! GI: H-mode in progress...
!----------------------------------------------------------------------------
! RUN: ...
!----------------------------------------------------------------------------

!----------------------------------------------------------------------------
!====================  Grad-Shafranov equation ==============================
!----------------------------------------------------------------------------
NEQUIL=41;            ! 3-moment equilibrium solver (ESC solver not present)
GICGEN::100::G;
GICHD::100::H;
GICFREE::100::Q;
GICWRITESTD::100::W;

!- normal run
!TAUMIN = 0.0001;                 ! Time step definiton
!TAUMAX=.001;
!- HD run
! Warning: WOUTP limits the saving resolution to 100ns
TAUMAX=MAX(CF13/1.d6,1.d-6); ! CF13 us, min is 1us
TAUMIN=MAX(CF14/1.d6,1.d-8); ! CF14 us, min is 10 ns
! Define it otherwise it takes the default 15us !!!

TAUINC = 1.1; ! Maximum increase factor for tau
DROUT  = 0.0;
!DTOUT  = 0.5;
DTOUT  = TAUMAX;
DPOUT  = 10;
TSCALE = 1.3;

!----------------------------------------------------------------------------
!====================  Ion densitiy and Impurity radiation ==================
!----------------------------------------------------------------------------
AMAIN=AMJ;    ZMAIN=ZMJ;    ! Mass & charge of main ion
ZEF=ZRD1X;
ZIM1=6;         AIM1=12;        ! 1st Impurity Z ---> Carbon
ZEF1=ZIM1*(ZEF-1.)/(ZIM1-1.);

PRAD=PBRAD+PSYNC;               ! Not in EF model

!----------------------------------------------------------------------------
!==================== Gas puff neutrals =====================================
!----------------------------------------------------------------------------


!! Cold neutrals to match the volume average from experiment
!!NNCL=0;
!!NNCL=10;
!!NNCL=CF9;
!SETNAV(CF9*NEXAV(ROC),-0.01); ! Sets NNCL to have NEAV matching NEXAV
!!TUNEN(CF9*NEXAV(ROC),0.01);
!!SNEAV(CF9*NEXAV(ROC),0.1,0.01,0.002);
!
!!- NEUT
!! No warm neutrals (maybe change for shots with CXRS)
!NNWM=0;
!!ENWM=0;! Ooops, code does not like this...
!! Energy of cold neutrals
!!ENCL=15;
!!ENCL=0.000025; ! [keV] 25meV=~300K
!ENCL=0.002; ! ??? 25meV is too low, min is 2eV
!! Number of iterations
!!NNCX=20; ! Default value
!! Call the neut sbr
!NEUT::0.01; ! Distribution of neutrals (NN,TN)
!SNN=SNNEU; ! Particle source for NE transport calculation (uses NNCL and NN)

! Setting all sources to 0 makes still the density increase :-O
SNN=0;
!SNEBM=0;   ! No neutral beam
SN=0;      ! No other sources/sinks

!!!--- From manual (testing) ---
!CV13=5+5*FRAMP(.5,1);     ! Prescribed volume average density
!SETNAV(CV13,.01):;

!----------------------------------------------------------------------------
!==============================  EC H&CD source =============================
!----------------------------------------------------------------------------

!CV5=0.53; CV6=0.15; FGAUSS(CV5,CV6,CAR13):;
!CV7=0.50; CV8=0.15; FGAUSS(CV7,CV8,CAR14):;
!CV1=IINT(CAR13,ROC); CV11=IINT(CAR14,ROC);
!CV1=IINT(CAR13X,ROC); CV11=IINT(CAR14X,ROC);

! --- Current drive ---
!CD=ZRD7X/CV1*ZRD37X*CAR13X+(1-ZRD7X)/CV11*ZRD38X*CAR14X; ! interp between 2 for SECCD
!CV11=IINT(CAR13,ROC)+1.e-6; ! total driven current, for normalization
!CD=0.01*CCD1/CV11*CAR13;
FGAUSS(0,CCD3*0.3,CAR13):; ! extra gaussian current in the center
CCD4=0.05; ! Total extra current in the center
CD=0;!CCD1*CAR6X+CCD2*CCD4*CAR13;
!CD=CCD2*CCD4*CAR13;

!--- ECH heating with absorbed power, conserved on volum integral ---
! Keep the integrated power to the absorbed power we got from TORAY
! CAR4X is the absorption percentage profile [W/m^3 W]
! ZRD41X is the average absorbed power from TORAY and p_gyro [MW]
ZRD42=VINT(CAR4X,ROC);
ZRD43=ZRD41X/ZRD42;
CAR7=ZRD43*CAR4X;
PEECR=CHE2*CAR7;


!----------------------------------------------------------------------------
!=================== Heat and particles sources and sinks ===================
!----------------------------------------------------------------------------
!PE=POH+PEECR-PEICL;     ! Electron power sources
!PI=PEICL+PAION;     ! Ion power sources
! For solving both TE and TI:
PE=POH+PEECR;     ! Electron power sources
PI=PAION;     ! Ion power sources
! Input power
CAR8=POH+PEECR;

SNN=0; SN=0; !SNNEU;

!----------------------------------------------------------------------------
!===== Transport coefficients: Different options exist (4.2) ====
!----------------------------------------------------------------------------
! === Options for HE, electron heat flux due to te gradient

!HE=CHE3*CAR5X; ! CAR5X is HEX, CHE3 is a modulable constant (p55 manual)

!- Computation of anomalous transport coefficients
!IFSPPL(,,,,chii_itg,chie_itg);! Asp says ITG is not pretty good

!- Choose chie
CAR6=(CHI4+CNB1*(RHO/ROC)**CNB2);                                ! parabolic 'L-mode'
CAR9=MAX(EXP(-((CNB3-(RHO/ROC))**2)/((CHE4/2)**2)),XSTEP(CNB3)); ! gaussian centered in CNB3
CAR4=CHE3*(CAR6(ROC)-CHI4/2)*CAR9;                               ! amplified gaussian
CAR5=MAX((CHI4+CNB1*(RHO/ROC)**CNB2)-CAR4,CNB4*XSTEP(1-CHE4));   ! joining all together

!GICTESN::100::T; ! SN
GICTESF::100::T; ! SF+

!- chie with step
!CAR5=(CHI4+CNB1*(RHO/ROC)**CNB2)*(1-XSTEP(CNB3))+CNB4*XSTEP(CNB3);

!--- chi_e rescaled combined with a pedestal correction and ELMs ---
ZRD1=VINT(CAR8,ROC);               ! Integrated input power
CV1=THQ99/ZRD1**0.69;              ! Scaling tau_e,H98
ZRD3=(WI(ROC)+WE(ROC))/ZRD1;       ! Instant. tau_e
ZRD4=ZRD3/CV1;                     ! Instant divided by scaling
CAR25=CHE1*ZRD4*CAR5;              ! chi_e depending of scaling (che1 is modifiable->HH)

!- ELM implementation
CAR16=CSOL1*FJUMP(CSOL2)*(1-FJUMP(CSOL2+0.001*CSOL3))*XSTEP(CSOL4);
GICELM::100::E;
GINOW(CSOL2)::100::0;
!GINEWELM(5.d0)::100::2;  ! SN
GINEWELM(9.d0)::100::2;  ! SF+

!--- chie with pedestal correction and ELM ---
HE=CAR25+CAR16;

ZRD20=RFMAX(CAR25); ! rho of max(chie) without ELM
ZRD21=((WI(ROC)-WI(ZRD20))+(WE(ROC)-WE(ZRD20)))/ZRD1; ! instant taue_ped
ZRD22=(WI(ZRD20)+WE(ZRD20))/ZRD1;                     ! instant taue_core

CAR27=TE*NE;
CAR22=GRAD(CAR27);
ZRD23=RFMAX(CAR22); ! rho at max(grad(p))

!=== Other transport coefficients ===
!--- particle flux ---
HN=0.0;            !particle flux due to te gradient
XN=0.0;         !particle flux due to ti gradient
! VRAS = Ware pinch, VP = pinch velocity
! CAR10X is 1/Lne_exp, comes from add1overLne.m

!- DN is HE without ELM
DN=CF2*CHE3*CAR25;

!- CN - Pinch velocity
! CAR10 < 0!!!
!CAR10=-(CRAD2*TANH(CRAD4*RHO/ROC+CRAD1)+CRAD3);! Does not work, tanh returns a scalar :-P
!CAR10=-(CRAD3+CRAD2*XSTEP(CRAD1));! Works :)

!- ELM sets Vn to zero at pedestal, to -CPEL1 at core
CAR11=-CPEL1*(1-XSTEP(CSOL4))*FJUMP(CSOL2)*(1-FJUMP(CSOL2+0.001*CSOL3));

!GICNESN::100::N; ! SN
GICNESF::100::N; ! SF+

!-- Given values smoothed
CAR12=EXP(-((CRAD1-RHO/ROC)**2)/((CRAD4/2)**2)); ! 17+12=cosh
CAR17=EXP(((CRAD1-RHO/ROC)**2)/((CRAD4/2)**2));  ! 17-12=sinh
CAR19=-(CRAD3+CRAD2*MAX((1-(CAR17-CAR12)/(CAR12+CAR17)),XSTEP(CRAD1)));
!CAR10=CAR19*(1+FJUMP(CSOL2+0.001*CSOL3)-FJUMP(CSOL2))+CAR11;

!-- CN from LTe
!- Always:
!CAR10=0.5*GRAD(TE)/TE*GRADRO;
!- ELM separated from TE:
CAR10=(0.5*GRAD(TE)/TE*GRADRO)*(1+FJUMP(CSOL2+0.001*CSOL3)-FJUMP(CSOL2))+CAR11;

! CN with CAR10
!CN=CF3*(DN*CAR10-VP*VRAS);
! Without Ware pinch
CN=CF3*DN*CAR10;


!!!GRAD(GRAD(GRAD(NE))) changes sign at pedestal limit (be careful, not the only sign change!!)

!--- electron heat flux terms ---
DE=0.0; ! chi_e due to dne
XE=0.0; ! chi_e due to dti 

!--- ion heat flux terms ---
DI=0.0; ! ion heat flux due to dne 
HI=0.0; ! ion heat flux due to dte
CI=0.0; ! additional ion heat flux term
! CAR18 is HE without ELM
CAR18=CHI1*CHE3*CAR25;
!XI=CHI2*(CAR18+HNASC); ! chi_i due to dti. (HNASC=Angioni-Sauter neoclassical conductivity)
!XI=CHI2*(CAR18+HNASI); ! chi_i due to dti. (Neoclassical Angioni-Sauter Ion)
!- chi_i plus ELM
XI=CHI2*(CAR18+HNASI+CAR16);

!----------------------------------------------------------------------------
!======================  Transport equations ================================
!----------------------------------------------------------------------------

!=== Density ===
!NE=NEX; ! specify from file
NE:EQ;    NE=NEX;        NEB=NEXB; ! solve with initial conditions set to NEX

!=== Electron Temperature ===
!TE=TEX; ! specify from file
! GI's model:
TE*:EQ;   TE=TEX/ZRD40X; TEB=TEXB; ! solve with initial conditions set to TEX/ZRD40X

!=== Ion Temperature ===
!TI=TIX; ! Specify from file
TI*:EQ;   TI=TIX;        TIB=TIXB;


!----------------------------------------------------------------------------
!====================  Poloidal field equation ==============================
!----------------------------------------------------------------------------

! === Bootstrap current coefficients===
!CAR31=max(0,-DCSA*GRAD(NE)/NE-HCSA*GRAD(TE)/TE-XCSA*GRAD(TI)/TI);
!HC=CIMP3*HCSA*CAR31/(-DCSA*GRAD(NE)/NE-HCSA*GRAD(TE)/TE-XCSA*GRAD(TI)/TI+1.e-6); 
!DC=CIMP3*DCSA*CAR31/(-DCSA*GRAD(NE)/NE-HCSA*GRAD(TE)/TE-XCSA*GRAD(TI)/TI+1.e-6); 
!XC=CIMP3*XCSA*CAR31/(-DCSA*GRAD(NE)/NE-HCSA*GRAD(TE)/TE-XCSA*GRAD(TI)/TI+1.e-6); 
HC=CFUS4*HCSA; DC=CFUS4*DCSA; XC=CFUS4*XCSA;    ! Bootstrap due to Sauter-Angioni

! === CC: Conductivity ===
CC=CNSA;
 
! === Initial condition (4.3.2) ===
MU=MUX;

! === Boundary condition (4.4.2) ===
IPL=CF1*IPLX; ! plasma current
!LEXT=1; ! external inductance in uH, may then define UEXT
!UEXT=CF12;
!UEXT=ZRD16X;

! === Calculation method specification ===
CU:EQ;         ! Solve

!----------------------------------------------------------------------------
!====================  Auxiliary quantities =================================
!----------------------------------------------------------------------------
CF11=ABS((FRMIN(UPL)-FRMAX(UPL))/FRMIN(UPL));  !Steady-stateness factor
CV14=FRMAX(MU); ! maximum mu (minimum q)

CAR1=TAUEE;  ! Electron energy confinement time  -> woutp
CAR2=TAUEI;  ! Ion energy confinement time       -> woutp
CAR3=HNASC;  ! Particle confinement time         -> woutp
CAR21=LINT;  ! Internal inductance               -> woutp
CAR28=FTLLM; ! Trapped particle fraction         -> woutp

!----------------------------------------------------------------------------
!==========================  Print out data =================================
!----------------------------------------------------------------------------
!WOUTP:.1:::S; ! Write data with given time interval (0.1s)
! Warning: to run full HD, watch the parameters TAUMIN and TAUMAX at lines 15 and after!!
ZRD15=MAX(CF15,TAUMAX);
WOUTP:ZRD15:CF16::S;! HD


!----------------------------------------------------------------------------
!=========================  Sawteeth ========================================
!----------------------------------------------------------------------------
ASTSAW(1,CMHD3,CMHD1,CMHD4,CMHD2)::1.5::; ! waiting 1.5s for a good equilibrium


!----------------------------------------------------------------------------
!====================== Radial E field ======================================
!----------------------------------------------------------------------------
! Found in manual: ER=BTOR*(FRS*MU*VTOR/RTOR+VDIA-VPOL);! Must find out what are all these...
! Lines from AK
!VPOL=VPSWW; !Poloidal rotation neocl.
!VTOR=VTORX; !Toroidal rotation from exp (not in my exp file...)
!ER=BTOR*(VDIA-VPOL+AMETR*MU*VTOR/RTOR); ! From AK


!------------------------------------------------------------------------
!------------------------------------------------------------------------
!======================  Radial output ==================================
!------------------------------------------------------------------------

! No 0 1 2 3 4 5
!  1   x       x
!  2 x x
!  3
!  4 x
!  5   x       x
!  6   x
!  7     x
!  8
!  9     x

!- Pag1
Te\TE\\TEX\-15;         ne\NE\\NEX\-02;       Johm\CU-CUBS-CD\-04;         Pech\PEECR\\CAR4X;
Chie\HE\-12;            q\1./MU\-11;          Jcd\CD\-04;                  Qe\QE\-16;

Ti\TI\-15;              ni\NI\-02;            Jpar\CU\-04;                 Jcd\CD\-04;
Xi\XI\-12;              shir\SHEAR\-11;       Jbs\CUBS\-04;                Qi\QI\-16;

!- Pag2
Jcd\CD\-04;             Jtor\CUTOR\-04;       Utor\UPL\-27;                Ware\CN;
coef\CFUS1\\CFUS2\-29;  Dn\DN;                rhos\RHOS;                   nu\NUES;

gamm\"work(j,10)";      Vpol\VPOL;            Upar\ULON\ECR-27;            Er\ER;
XIan\CAR18\-29;         \;                    Qn\QN;                       psi\FP;

!- Pag3
Johm\CUOHM\-04;         taue\TAUEE;           AnEq\"work(j,7)";            de\-DE;
we\WE;                  Pohm\POH;             cc\CC;                       f\FTLLM;

grdr\GRADRO;            g11\G11;              Eq\PEICL+CMHD1*"work(j,7)";  iLTi\1./LTI\50;
lint\LINT;              ipol\IPOL;            \;                           iLTe\1./LTE\50;

!- Pag4
Bmax\BMAXT;             aa\AMETR\\CAR9X\-43;  EqEn\PEICL;                  nue\NUES;
nuee\NUEE;              \;                    dTe\ABS(TE-TEX)/TEX*100;     Bdb0\BDB0;

!\;                      \;                    \;                           \;
itot\5.*G22*BTOR*IPOL*RHO*MU/RTOR; c6\CAR6\-44; c5\CAR5\-44;               \;
\;                      \;                    \;                           \;

!- Pag5 (needed for other plots)
Dn\DN;                  Vp\VP\1;              ne\NE\\NEX\-02;              Qn\QN\1;
\;                      Ware\VP*VRAS\1;       \;                           cndn\ABS(CN/DN)\-51;

Cn\CN;                  Vras\VRAS\1;          ni\NI\-02;                   \;
!Qn2\G11*NE*(CN-DN*GRAD(NE)/NE)\-55;
\;                      \;                    nn\NN;                       *lne\ABS(CAR10)\-51;

!------------------------------------------------------------------------
!=======================  Time output ===================================
!------------------------------------------------------------------------
!Warning: name is limited to 4 characters, width is 16 quantitites
! 8 quantities at a time are used for the time plot, one up, one down and so on.
Te0_TE(0);
TeX0_TEX(0);
Ti0_TI(0);
ne0_NE(0);
neX0_NEX(0);
 !neb_NEB;
Joh0_CU(0)-CUBS(0)-CD(0);
q0_1/MU(0);
qa_1/MU(ROC);
 !qmin_1/FRMAX(MU);
 !rqin_RFMAX(MU);
 !QeB_QEB;
 !Zef_ZEF(0);
Ipl_IPL;
Icd_ICD(ROC);
Ibs_IBS(ROC);
Iohm_IOHM(ROC);
Itot_ICD(ROC)+IBS(ROC)+IOHM(ROC);
 !AnEq_VINT("work(j,7)",ROC);
 !Ech_VINT(PEECR,ROC);
 !z41_ZRD41X; ! = ECH
 !tauG_TAUEE(ROC);
 !NPe_VINT(NE,ROC);
 !We_WE(ROC);
Vlup_UPL(ROC);
 !abc_AMETR(ROC);
 !abct_CAR9X(ROC);
 !stst_CF11;

 !cf2_CF2;
 !cf3_CF3;
 !chi1_CHI1;
 !che1_CHE1;
 !che2_CHE2;
 !mhd4_CMHD4;
 !chi4_CHI4;
 !cnb1_CNB1;
 !cnb2_CNB2;
 !cnb3_CNB3;
 !cnb4_CNB4;
 !sol1_CSOL1;
 !sol2_CSOL2;
 !sol3_CSOL3;
 !sol4_CSOL4;
 !rad1_CRAD1;
 !rad2_CRAD2;
 !rad3_CRAD3;
 !rad4_CRAD4;

scal_ZRD4;
 !nCN_NNCL;
<ne>_NEAV(ROC);
<nx>_NEXAV(ROC);
tCor_1000*ZRD22;
tPed_1000*ZRD21;

!-------------------------------------------------------------------------------------------------
